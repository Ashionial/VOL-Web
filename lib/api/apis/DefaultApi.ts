/* tslint:disable */
/* eslint-disable */
/**
 * vol
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  K8sCommandPostRequest,
  YamlPostRequest,
} from '../models/index';
import {
    K8sCommandPostRequestFromJSON,
    K8sCommandPostRequestToJSON,
    YamlPostRequestFromJSON,
    YamlPostRequestToJSON,
} from '../models/index';

export interface K8sCommandPostOperationRequest {
    k8sCommandPostRequest?: K8sCommandPostRequest;
}

export interface K8sNodeGetRequest {
    body?: object;
}

export interface YamlPostOperationRequest {
    yamlPostRequest?: YamlPostRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * 
     * Command
     */
    async k8sCommandPostRaw(requestParameters: K8sCommandPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/k8s/command`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: K8sCommandPostRequestToJSON(requestParameters['k8sCommandPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * 
     * Command
     */
    async k8sCommandPost(requestParameters: K8sCommandPostOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.k8sCommandPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 
     * Get Node
     */
    async k8sNodeGetRaw(requestParameters: K8sNodeGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/k8s/node`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * 
     * Get Node
     */
    async k8sNodeGet(requestParameters: K8sNodeGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.k8sNodeGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 
     * Upload Yaml
     */
    async yamlPostRaw(requestParameters: YamlPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/yaml`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: YamlPostRequestToJSON(requestParameters['yamlPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * 
     * Upload Yaml
     */
    async yamlPost(requestParameters: YamlPostOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.yamlPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
